syntax = "proto3";
package grepsvc;

import "google/protobuf/empty.proto";

option go_package = "/grepsvc;grepsvc";

service GrepService {
    rpc ProcessChunk(ChunkRequest) returns (ChunkResponse);
    rpc HealthCheck(google.protobuf.Empty) returns (HealthResponse);
}

message GrepOptions {
    string pattern = 1; 
    int32 after = 2;
    int32 before = 3;
    int32 around = 4;
    bool count = 5;
    bool ignore_case = 6;
    bool invert = 7;
    bool fixed = 8;
    bool line_num = 9;
}

message Match {
    int32 line_num = 1;
    bytes content = 2;
    repeated bytes context_before = 3;
    repeated bytes context_after = 4;
}

message ChunkRequest {
    string task_id = 1;
    bytes data = 2;
    int32 chunk_index = 3;
    GrepOptions options = 4;
}

message ChunkResponse {
    string task_id = 1;
    repeated Match matches = 2;
    int32 match_count = 3;
    string error = 4;    
}

message HealthResponse {
    bool ok = 1;
}